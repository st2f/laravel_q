services:

    ssr_q:
        image: node:20
        container_name: ssr_q
        working_dir: /app
        volumes:
            - ./:/app
        depends_on:
            - php_q
        command: node bootstrap/ssr/ssr.js
        restart: unless-stopped
        networks:
            - website3

    php_q:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: php_q
        volumes:
            - ./:/var/www
        networks:
            - website3
        environment:
            PHP_IDE_CONFIG: serverName=Docker # For Xdebug
        restart: unless-stopped

    nginx_q:
        image: nginx:1.27.4
        container_name: nginx_q
        volumes:
            - ./public:/var/www/public
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php_q
        restart: unless-stopped
        labels:
            - traefik.enable=true
            - traefik.http.routers.nginx_q.tls=true
            - traefik.http.routers.nginx_q.rule=Host(`${NGINX_HOST}`) || Host(`${NGINX_HOST_WWW}`)
            - traefik.http.routers.nginx_q.entrypoints=websecure
            - traefik.http.services.nginx_q.loadbalancer.server.port=80
            # redirect www to non-www
            - traefik.http.middlewares.mywwwredirect.redirectregex.regex=^https://www\.(.*)
            - traefik.http.middlewares.mywwwredirect.redirectregex.replacement=https://$${1}
            - traefik.http.routers.nginx_q.middlewares=mywwwredirect
        networks:
            - website3

    db_q:
        image: mariadb:11.7.2
        container_name: db_q
        restart: always
        environment:
            MARIADB_ROOT_PASSWORD: $DB_PASSWORD
            MARIADB_DATABASE: $DB_DATABASE
            MARIADB_USER: $DB_USERNAME
            MARIADB_PASSWORD: $DB_PASSWORD
            APP_DB_HOST: $ADMINER_HOST
            APP_DB_USER: $DB_USERNAME
            APP_DB_PASSWD: $DB_PASSWORD
        volumes:
            - ./dbdata:/var/lib/mysql
        labels:
            - traefik.enable=true
            - traefik.tcp.routers.db_q.rule=HostSNI(`*`)
            - traefik.tcp.services.db_q.loadbalancer.server.port=3306
            - traefik.tcp.routers.db_q.entrypoints=db_q
        networks:
            - website3

    adminer_q:
        image: adminer
        container_name: adminer_q
        restart: always
        labels:
            - traefik.enable=true
            - traefik.http.routers.adminer_q.tls=true
            - traefik.http.routers.adminer_q.rule=Host(`${ADMINER_HOST}`)
            - traefik.http.routers.adminer_q.entrypoints=websecure
        depends_on:
            - db_q
        networks:
            - website3

networks:
    website3:
        name: "proxy"
        external: true

